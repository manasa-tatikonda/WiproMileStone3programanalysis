        String number=String.valueOf(input1);
		char ch='\u0000';
		if(isPalindrome(number))
		{return -1;}
		else
		{
             for(int i=0;i<=number.length()-1;i++)
			 {
				 ch=number.charAt(i);
				 StringBuilder num=new StringBuilder(number);
				 String num1=(num.deleteCharAt(i)).toString();
				 boolean flag=isPalindrome(num1);
				 if(flag)
				 {
					 break;
				 }
			 }
			 return (int)ch-'0';
		}
		
		//throw new UnsupportedOperationException("digitRemove_Palin(int input1)");
	}
	public static boolean isPalindrome(String s)
	{
		int i=0,j=s.length()-1;
		int flag=0;
		while(j>i)
		{
			if(Character.compare(s.charAt(i),s.charAt(j))==0)
			{i++;j--;}
			else{flag=1;break;}
		}
		if(flag==1){return false;}
		else{return true;}
		
	}
}

https://tests.mettl.com/test-window/6d825776